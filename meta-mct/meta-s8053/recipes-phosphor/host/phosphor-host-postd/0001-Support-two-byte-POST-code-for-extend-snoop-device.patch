From 18af30cefea0e64c10e05e64e387e908722cd504 Mon Sep 17 00:00:00 2001
From: John Chung <john.chung@mic.com.tw>
Date: Tue, 8 Nov 2022 03:06:31 +0800
Subject: [PATCH] Support two byte POST code for extend snoop device

---
 main.cpp          | 35 +++++++++++++++++++++++++++++++++--
 meson.build       |  3 +++
 meson_options.txt |  5 +++++
 3 files changed, 41 insertions(+), 2 deletions(-)

diff --git a/main.cpp b/main.cpp
index 1ccfd21..28376a5 100644
--- a/main.cpp
+++ b/main.cpp
@@ -35,6 +35,7 @@
 #include <thread>
 
 static size_t codeSize = 1; /* Size of each POST code in bytes */
+int postExtendFd = -1; /* Snoop device fd for extend device using for byte 2 */
 
 static void usage(const char* name)
 {
@@ -43,6 +44,7 @@ static void usage(const char* name)
             "  -b, --bytes <SIZE>     set POST code length to <SIZE> bytes. "
             "Default is %zu\n"
             "  -d, --device <DEVICE>  use <DEVICE> file.\n"
+            "  -e, --deviceExtend <DEVICE>  use <DEVICE> file for two byte post code.\n"
             "  -v, --verbose  Prints verbose information while running\n\n",
             name, codeSize);
 }
@@ -55,7 +57,8 @@ void PostCodeEventHandler(sdeventplus::source::IO& s, int postFd, uint32_t,
                           PostReporter* reporter, bool verbose)
 {
     uint64_t code = 0;
-    ssize_t readb;
+    uint64_t codeExtend = 0;
+    ssize_t readb, readbExtend;
     while ((readb = read(postFd, &code, codeSize)) > 0)
     {
         code = le64toh(code);
@@ -63,6 +66,20 @@ void PostCodeEventHandler(sdeventplus::source::IO& s, int postFd, uint32_t,
         {
             fprintf(stderr, "Code: 0x%" PRIx64 "\n", code);
         }
+
+        if(postExtendFd != -1)
+        {
+            if((readbExtend = read(postExtendFd, &codeExtend, codeSize)) > 0)
+            {
+                codeExtend = le64toh(codeExtend);
+                if (verbose)
+                {
+                    fprintf(stderr, "Code Extend: 0x%" PRIx64 "\n", codeExtend);
+                }
+                code = (codeExtend << 8) + code;
+            }
+        }
+
         // HACK: Always send property changed signal even for the same code
         // since we are single threaded, external users will never see the
         // first value.
@@ -121,12 +138,13 @@ int main(int argc, char* argv[])
     static const struct option long_options[] = {
         {"bytes",  required_argument, NULL, 'b'},
         {"device", optional_argument, NULL, 'd'},
+        {"deviceExtend", optional_argument, NULL, 'e'},
         {"verbose", no_argument, NULL, 'v'},
         {0, 0, 0, 0}
     };
     // clang-format on
 
-    while ((opt = getopt_long(argc, argv, "b:d:v", long_options, NULL)) != -1)
+    while ((opt = getopt_long(argc, argv, "b:d:e:v", long_options, NULL)) != -1)
     {
         switch (opt)
         {
@@ -152,6 +170,14 @@ int main(int argc, char* argv[])
                     return -1;
                 }
 
+                break;
+            case 'e':
+                postExtendFd = open(optarg, O_NONBLOCK);
+                if (postExtendFd < 0)
+                {
+                    fprintf(stderr, "Unable to open: %s\n", optarg);
+                    return -1;
+                }
                 break;
             case 'v':
                 verbose = true;
@@ -207,5 +233,10 @@ int main(int argc, char* argv[])
         close(postFd);
     }
 
+    if (postExtendFd > -1)
+    {
+        close(postExtendFd);
+    }
+
     return rc;
 }
diff --git a/meson.build b/meson.build
index 2bafd48..8ae7a73 100644
--- a/meson.build
+++ b/meson.build
@@ -28,6 +28,9 @@ snoopd_args = '-b ' + get_option('post-code-bytes').to_string()
 if get_option('snoop-device') != ''
   snoopd_args += ' -d /dev/' + get_option('snoop-device')
 endif
+if get_option('snoop-device-extend') != ''
+  snoopd_args += ' -e /dev/' + get_option('snoop-device-extend')
+endif
 conf_data.set('SNOOPD_ARGS', snoopd_args)
 
 configure_file(
diff --git a/meson_options.txt b/meson_options.txt
index 763c73e..4f1e5b6 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -3,6 +3,11 @@ option(
     description: 'Linux module name of the snoop device.',
     type: 'string',
 )
+option(
+    'snoop-device-extend',
+    description: 'Linux module name of the snoop device.',
+    type: 'string',
+)
 option(
     'post-code-bytes',
     description: 'Post code byte size.',
-- 
2.25.1

